/*********************************************************************************************
/**	* Infinite scrolling
 	* @author	@mvdandrieux
**#******************************************************************************************/
(function($)
{	
//	Here we go!
	$.infinitescroll = function(element, options, callbacks)
	{
	//	Use "plugin" to reference the current instance of the object
		var plugin = this;
	//	this will hold the merged default, and user-provided options
		plugin.settings = {}
		var $element = $(element), // reference to the jQuery version of DOM element
		element = element;	// reference to the actual DOM element
		
	//	Plugin's variables
		var vars = {
			page:0,
			autoload:true,
			autoscroll:false,
			range:options.limit,
			rangeFrom:'0',
			hash:false,
			element:null,
		}

	//	The "constructor"
		plugin.init = function()
		{
		//	the plugin's final properties are the merged default and user-provided options (if any)
			plugin.settings = $.extend({}, vars, options);
			
		//	Some vars
			container = '.infiniteScrollContainer';
			wantsmore = '.infiniteScrollWantsMore';
			stopper = '.infiniteScrollStopper';

		//	Use the hashtag to jump to a page, or start from scratch
			if (plugin.settings.hash == true && window.location.hash) plugin.settings.page = window.location.hash.replace('#', '');
			else plugin.settings.page = 1;
			
		//	Hide the stopper and the wants more to begin with
			$element.find(stopper).hide();
			
		//	Load more content
			$element.find(wantsmore).on('click', function()
			{
				plugin.load(true);
			});
		
		//	Some binds autoscroll (depends on the jquery.viewport app)
			if (plugin.settings.autoscroll === true)
			{
			//	Scroll what ?
				el = (plugin.settings.element) ? plugin.settings.element : window;
				$().bind('scroll', function(event)
				{
					$element.find('.infiniteScrollWantsMore:not(.loading):in-viewport').trigger('click');
				});
			};
		
		//	Automatically load the first content
			if (plugin.settings.autoload === true) plugin.load();
		}
		
	//	Load content
		plugin.load = function(next)
		{
		//	Start loading new content
			$element.find(wantsmore).addClass('loading');
		//	Do we want the next page ?
			if (next) plugin.settings.page++;
		//	Change range
			plugin.settings.rangeFrom = plugin.settings.range * (plugin.settings.page-1);
			plugin.settings.limit = plugin.settings.rangeFrom+', '+plugin.settings.range;
		
		//	Load
			$.ajx(
				plugin.settings,
				{
					done:function(html)
					{
					//	Append content
						if (plugin.settings.append != false)
						{
							$element.find(container).append(html);
						}
						
					//	If we have content
						if (html)
						{
						//	Stop loading new content
							$element.find(wantsmore).removeClass('loading');
						//	Change URL
							if (plugin.settings.hash == true && plugin.settings.page > 1) window.history.pushState('string', 'chose', '#'+plugin.settings.page);
						}
					//	No more content to display
						else
						{
						//	No more button
							$element.find(wantsmore).remove();
						//	Show the stopper
							$element.find(stopper).show();
						}

					//	Execute callback (make sure the callback is a function)
						if ((typeof(callbacks) != 'undefined') && (typeof(callbacks) == "function")) callbacks.call(this, html);
					}
				}
			);
		}

	//	Fire up the plugin!
		plugin.init();
	}

//	Add the plugin to the jQuery.fn object
	$.fn.infinitescroll = function(options, callbacks)
	{
		return this.each(function()
		{
			if (undefined == $(this).data('infinitescroll'))
			{
				var plugin = new $.infinitescroll(this, options, callbacks);
				$(this).data('infinitescroll', plugin);
			}
		});
	}
})(jQuery);